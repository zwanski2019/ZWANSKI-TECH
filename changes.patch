diff --git a/src/hooks/useJobPosts.ts b/src/hooks/useJobPosts.ts
index a2a6f72..5d7ded0 100644
--- a/src/hooks/useJobPosts.ts
+++ b/src/hooks/useJobPosts.ts
@@ -2,6 +2,7 @@
 import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
 import { supabase } from '@/integrations/supabase/client';
 import { JobPost } from '@/types/marketplace';
+import { Profile } from '@/types/profile';
 
 export const useJobPosts = (filters?: {
   category?: string;
@@ -59,7 +60,7 @@ export const useJobPosts = (filters?: {
             verified: false
           }
         })) as (JobPost & { 
-          employer: any;
+          employer: Profile;
           applications: { count: number }[];
         })[];
       } catch (error) {
diff --git a/src/index.css b/src/index.css
index 25d47d9..24e9581 100644
--- a/src/index.css
+++ b/src/index.css
@@ -1,11 +1,13 @@
 
-/* Import Tailwind CSS directives */
-@tailwind base;
-@tailwind components;
-@tailwind utilities;
-
 /* Import all CSS modules for better organization and maintainability */
 @import './styles/base.css';
 @import './styles/animations.css';
 @import './styles/components.css';
 @import './styles/utilities.css';
+
+/* Import Tailwind CSS directives */
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+
diff --git a/src/pages/Chat.tsx b/src/pages/Chat.tsx
index 9fb1c4a..fca8dd4 100644
--- a/src/pages/Chat.tsx
+++ b/src/pages/Chat.tsx
@@ -12,11 +12,12 @@ import LoginForm from "@/components/LoginForm";
 import { useWebSocket } from "@/hooks/useWebSocket";
 import { useToast } from "@/hooks/use-toast";
 import { supabase } from "@/integrations/supabase/client";
+import { Profile } from "@/types/profile";
 
 const Chat = () => {
   const { user, isAuthenticated, signOut } = useAuth();
   const [newMessage, setNewMessage] = useState("");
-  const [userProfile, setUserProfile] = useState<any>(null);
+  const [userProfile, setUserProfile] = useState<Profile | null>(null);
   const messagesEndRef = useRef<HTMLDivElement>(null);
   const { toast } = useToast();
   
diff --git a/src/services/youtubeApi.ts b/src/services/youtubeApi.ts
index 7d72dd3..6eda9c6 100644
--- a/src/services/youtubeApi.ts
+++ b/src/services/youtubeApi.ts
@@ -96,7 +96,7 @@ export async function fetchYouTubeVideos(): Promise<YouTubeVideo[]> {
     }
 
     // Get video IDs for additional details
-    const videoIds = videosData.items.map((item: any) => item.id.videoId).join(',');
+    const videoIds = videosData.items.map((item: YouTubeSearchItem) => item.id.videoId).join(",");
     
     // Fetch video statistics and content details
     const detailsResponse = await fetch(
@@ -106,7 +106,7 @@ export async function fetchYouTubeVideos(): Promise<YouTubeVideo[]> {
     const detailsData = await detailsResponse.json();
     
     // Combine data and format for our component
-    const videos: YouTubeVideo[] = videosData.items.map((video: any, index: number) => {
+    const videos: YouTubeVideo[] = videosData.items.map((video: YouTubeSearchItem, index: number) => {
       const details = detailsData.items?.[index];
       const videoId = video.id.videoId;
       
diff --git a/src/services/youtubeService.ts b/src/services/youtubeService.ts
index 58d6558..64be729 100644
--- a/src/services/youtubeService.ts
+++ b/src/services/youtubeService.ts
@@ -156,7 +156,7 @@ export async function fetchYouTubeVideos(forceRefresh = false): Promise<YouTubeV
     console.log('Fetching fresh YouTube videos...');
     
     // Fetch latest videos from the channel using direct channel ID
-    const videosData = await fetchWithRetry(
+    const videosData: YouTubeSearchResponse = await fetchWithRetry(
       `${YOUTUBE_API_BASE_URL}/search?part=snippet&channelId=${CHANNEL_ID}&type=video&order=date&maxResults=6&key=${YOUTUBE_API_KEY}`
     );
     
@@ -165,15 +165,15 @@ export async function fetchYouTubeVideos(forceRefresh = false): Promise<YouTubeV
     }
 
     // Get video IDs for additional details
-    const videoIds = videosData.items.map((item: any) => item.id.videoId).join(',');
+    const videoIds = videosData.items.map((item: YouTubeSearchItem) => item.id.videoId).join(",");
     
     // Fetch video statistics and content details
-    const detailsData = await fetchWithRetry(
+    const detailsData: YouTubeVideoDetailsResponse = await fetchWithRetry(
       `${YOUTUBE_API_BASE_URL}/videos?part=statistics,contentDetails&id=${videoIds}&key=${YOUTUBE_API_KEY}`
     );
     
     // Combine data and format for our component
-    const videos: YouTubeVideo[] = videosData.items.map((video: any, index: number) => {
+    const videos: YouTubeVideo[] = videosData.items.map((video: YouTubeSearchItem, index: number) => {
       const details = detailsData.items?.[index];
       const videoId = video.id.videoId;
       
diff --git a/vite.config.ts b/vite.config.ts
index 790fc4b..cd8f4be 100644
--- a/vite.config.ts
+++ b/vite.config.ts
@@ -11,6 +11,7 @@ export default defineConfig(({ mode }) => ({
     port: 8080,
     allowedHosts: [
       "36d3624d-d6b8-44c2-aa3d-5e74376284c4.lovableproject.com",
+      "8080-iyzh4ybq817pa0xwg4vwu-72bb8412.manusvm.computer",
     ],
   },
   plugins: [
